#include "map.hpp"
#include <ncurses.h>

Map::Map()
{
  layout = {
        "##############################################",
        "# ................##.................##......#",
        "#.####.#####.#####.##.#####.#####.####.#####.#",
        "#.####.#####.#####.##.#####.#####.####.#####.#",
        "#............................................#",
        "#.####.##.########.##.########.##.####.#####.#",
        "#......##....##............##....##......#...#",
        "######..####.##.##########.##.####..######.###",
        "     #..##                      ##.#          ",
        "######.##.####################.##..#####.#####",
        "#............##..............##..............#",
        "#.####.#####.##.#####.#####.####.#####.#####.#",
        "#...##................................##.....#",
        "###.##.##.############.########.##.##.######.#",
        "#......##....##............##....##......#...#",
        "#.##########.##.##########.##.##########.#####",
        "#............................................#",
        "##############################################"
  };
}

void Map::draw() const
{
  for(int y = 0; y < layout.size(); y++)
  {
    for(int x = 0; x < static_cast<int>(layout[y].length()); ++x)
    {
      mvaddch(y, x, layout[y][x]);
    }
  }
}

int Map::getHeight() const
{
  return layout.size();
}

int Map::getWidth() const
{
  if(!layout.empty())
    return layout[0].length();
  return 0;
}
